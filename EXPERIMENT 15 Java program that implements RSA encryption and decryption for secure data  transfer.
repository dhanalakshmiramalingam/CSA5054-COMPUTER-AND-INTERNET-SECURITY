import java.security.*; 
import javax.crypto.Cipher; 
import java.util.Base64; 
public class RSAEncryption { 
private static KeyPair generateKeyPair() throws Exception { 
KeyPairGenerator keyPairGenerator = 
KeyPairGenerator.getInstance("RSA"); 
keyPairGenerator.initialize(2048); 
return keyPairGenerator.generateKeyPair(); 
} 
public static String encrypt(String data, PublicKey publicKey) throws 
Exception { 
Cipher cipher = Cipher.getInstance("RSA"); 
cipher.init(Cipher.ENCRYPT_MODE, publicKey); 
byte[] encryptedBytes = cipher.doFinal(data.getBytes()); 
return Base64.getEncoder().encodeToString(encryptedBytes); 
} 
 
public static String decrypt(String encryptedData, PrivateKey 
privateKey) throws Exception { 
Cipher cipher = Cipher.getInstance("RSA"); 
cipher.init(Cipher.DECRYPT_MODE, privateKey); 
byte[] decryptedBytes = 
cipher.doFinal(Base64.getDecoder().decode(encryptedData)); 
return new String(decryptedBytes); 
} 
public static void main(String[] args) throws Exception { 
KeyPair keyPair = generateKeyPair(); 
String originalData = "SecureMessage123"; 
 
String encryptedData = encrypt(originalData, keyPair.getPublic()); 
System.out.println("Encrypted Data: " + encryptedData); 
String decryptedData = decrypt(encryptedData, 
keyPair.getPrivate()); 
System.out.println("Decrypted Data: " + decryptedData); 
} 
} 
